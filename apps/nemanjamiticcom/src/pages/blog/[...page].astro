---
import { getCollection } from 'astro:content';

import Pagination from '../../components/Pagination.astro';
import PostCard from '../../components/PostCard.astro';
import Heading from '../../components/ui/Heading.astro';
import Text from '../../components/ui/Text.astro';
import Config from '../../config';
import Base from '../../layouts/Base.astro';
import { sortPostsByDateDesc } from '../../modules/blog-post';

import type { GetStaticPathsOptions, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

// [page].astro and getStaticPaths because of pagination
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getCollection('blog', ({ data }) => !(import.meta.env.PROD && data.draft));
  const sortedPosts = sortPostsByDateDesc(posts);

  const pagination = paginate(sortedPosts, { pageSize: Config.PAGE_SIZE }); // must take entire config here, interesting
  pagination.push({ params: { page: '1' }, props: pagination[0].props });
  return pagination;
}

type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

// page from pagination
const { page } = Astro.props;
---

<Base title="Blog">
  <div>
    <Heading as="h1" align="center">Blog</Heading>
    <Text>
      Mostly just whatever seems important in the moment about JavaScript, frontend development, and
      life surrounding me.
    </Text>
  </div>

  <section>
    <div class="flex flex-col items-center gap-16">
      {page.data.map((post) => <PostCard post={post} />)}
    </div>
  </section>

  <Pagination
    nextUrl={page.url.next}
    prevUrl={page.url.prev}
    current={page.currentPage}
    total={page.lastPage}
  />
</Base>
