---
import { Image } from 'astro:assets';

import {
  getAllPosts,
  getHeadingsForTableOfContents,
  getMorePostsWithRenderedMarkdownDescription,
  getPostSlug,
  getRandomPosts,
} from '@/modules/post';
import Centered from '@/layouts/Centered.astro';
import MorePosts from '@/components/MorePosts.astro';
import PostMeta from '@/components/PostMeta.astro';
import Prose from '@/components/Prose.astro';
import SharePost from '@/components/SharePost.astro';
import TocWidget from '@/components/TocWidget.astro';

export async function getStaticPaths() {
  const sortedPosts = await getAllPosts();

  const paths = sortedPosts.map((post) => {
    const slug = getPostSlug(post);
    const randomPosts = getRandomPosts(sortedPosts, 4, slug);

    return {
      params: { slug },
      props: { ...post, randomPosts },
    };
  });

  return paths;
}

const { data, render, randomPosts } = Astro.props;
const {
  draft,
  title,
  publishDate,
  updatedDate,
  description,
  toc,
  heroImage,
  heroAlt,
  noHero,
  category,
  tags = [],
} = data;

const { slug } = Astro.params;

const { Content, headings: postHeadings, remarkPluginFrontmatter } = await render();
const { readingTime } = remarkPluginFrontmatter;

const headings = getHeadingsForTableOfContents(postHeadings);
const morePosts = await getMorePostsWithRenderedMarkdownDescription(randomPosts);

const postMetaProps = {
  category,
  publishDate,
  readingTime,
  updatedDate,
};
---

{/* clean up all of this */}
<Centered title={title} description={description} image={heroImage.src}>
  <article itemprop="blogPost" itemscope itemtype="http://schema.org/Article">
    <meta itemprop="mainEntityOfPage" content={slug} />
    <Prose>
      <h1 itemprop="name headline" transition:name={`title-${slug!.replace(/.*\//, '')}`}>
        {title}
        {draft ? <sup class="text-red-400">(draft)</sup> : null}
      </h1>
      <PostMeta {...postMetaProps} />
      <!-- <TagList tags={tags} marginY /> -->

      {/* hero image */}
      {
        !noHero && (
          <Image
            src={heroImage}
            alt={heroAlt}
            fetchpriority="high"
            loading="eager"
            width={1280}
            itemprop="image"
            class="block w-full h-32 md:h-80 object-cover"
            transition:name={`hero-${slug!.replace(/.*\//, '')}`}
          />
        )
      }

      <div itemprop="articleBody" transition:name={`content-${slug!.replace(/.*\//, '')}`}>
        {/* table of contents */}
        {toc && <TocWidget headings={headings} />}

        <Content />
      </div>
      <hr />

      <SharePost title={title} slug={slug} />
    </Prose>
  </article>

  <MorePosts morePosts={morePosts} />
</Centered>
