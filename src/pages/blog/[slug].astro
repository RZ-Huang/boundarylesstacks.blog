---
import { Image } from 'astro:assets';

import {
  getAllPosts,
  getHeadingsForTableOfContents,
  getPostsWithReadingTimeFromPosts,
  getRandomPosts,
} from '@/modules/post';
import { default as PostLayout } from '@/layouts/Post.astro';
import MorePostsList from '@/components/MorePostsList.astro';
import PostMeta from '@/components/PostMeta.astro';
import SharePost from '@/components/SharePost.astro';
import TagList from '@/components/TagList.astro';
import TocWidget from '@/components/TocWidget.astro';

import type { Metadata } from '@/types/common';
import type { Post } from '@/types/post';

export async function getStaticPaths() {
  const sortedPosts = await getAllPosts();
  const posts: Post[] = await getPostsWithReadingTimeFromPosts(sortedPosts);

  const paths = posts.map((post) => {
    const { slug } = post;
    const randomPosts = getRandomPosts({ posts, excludeSlug: slug });

    return {
      params: { slug },
      props: { ...post, randomPosts },
    };
  });

  return paths;
}

const { data, render, readingTime, randomPosts } = Astro.props;
const {
  draft,
  title,
  publishDate,
  updatedDate,
  description,
  toc,
  heroImage,
  heroAlt,
  noHero,
  category,
  tags = [],
} = data;

const { slug } = Astro.params;

const { Content, headings: postHeadings } = await render();
const headings = getHeadingsForTableOfContents(postHeadings);

const postMetaProps = {
  category,
  publishDate,
  readingTime,
  updatedDate,
};

const metadata: Metadata = { title, description, image: heroImage.src };
---

<PostLayout {metadata}>
  <Fragment slot="hero-image">
    {/* hero image 1280x720 max, 16:9 */}
    {
      !noHero && (
        <Image
          src={heroImage}
          alt={heroAlt}
          fetchpriority="high"
          loading="eager"
          itemprop="image"
          class="block max-w-full h-auto aspect-[16/8] object-cover"
          widths={[320, 540, 720, 1024]}
          sizes="(max-width: 475px) 320px, (max-width: 720px) 540px, (max-width: 1280px) 720px, 1024px"
        />
      )
    }
  </Fragment>

  <Fragment slot="hero-text">
    {/* title */}
    <h1>
      {title}
      {draft && <sup class="text-red-400">(draft)</sup>}
    </h1>

    {/* description */}
    {description && <h2 class="font-normal text-xl lg:text-2xl tracking-tight">{description}</h2>}

    {/* meta */}
    <PostMeta {...postMetaProps} class="not-prose" />
  </Fragment>

  {/* section content */}
  <Fragment slot="content">
    {/* table of contents */}
    {toc && false && <TocWidget headings={headings} />}

    <Content />

    <SharePost title={title} slug={slug} />

    <TagList tags={tags} />
  </Fragment>

  <Fragment slot="more-posts">
    <MorePostsList morePosts={randomPosts} />
  </Fragment>
</PostLayout>
