---
import { getAllPostsWithReadingTime } from '@/modules/post/common';
import { groupPostsByYear } from '@/modules/post/group-by-year';
import List from '@/layouts/List.astro';
import CategoriesAndTags from '@/components/CategoriesAndTags.astro';
import { CONFIG } from '@/config';
import { getPageMetadata } from '@/utils/metadata';
import { pickPaginationPropsFromPage } from '@/utils/pagination';

import type { Post } from '@/types/post';
import type { GetStaticPathsOptions } from 'astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts: Post[] = await getAllPostsWithReadingTime();

  // filter by tag and category here
  // must have grouped here for pagination // no need

  const pagination = paginate(posts, { pageSize: CONFIG.PAGE_SIZE });
  pagination.push({ params: { page: '1' }, props: pagination[0].props });
  return pagination;
}

const { page } = Astro.props;
const { data: posts } = page;

// for categories and tags
const allPosts = await getAllPostsWithReadingTime();

const postsByYear = groupPostsByYear(posts);

const paginationProps = pickPaginationPropsFromPage(page);

const metadata = getPageMetadata('lists/blog/categories-and-tags');
const layoutProps = { metadata, paginationProps };
---

<List {...layoutProps}>
  <CategoriesAndTags posts={allPosts} />
  {
    postsByYear.years.map((year) => (
      <>
        <h2 class="title text-lg">{year}</h2>
        <ul class="mb-8 mt-6 space-y-8">
          {postsByYear.posts[year].map((post) => (
            <li class="">{post.data.title}</li>
          ))}
        </ul>
      </>
    ))
  }
</List>
