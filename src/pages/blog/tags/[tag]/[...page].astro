---
import { getAllPosts, getPostsWithReadingTimeFromPosts, getUniqueTags } from '@/modules/post';
import List from '@/layouts/List.astro';
import { getPaginationPropsFromPage } from '@/components/Pagination.astro';
import PostList from '@/components/PostList.astro';
import { CONFIG } from '@/config';

import type { Metadata } from '@/types/common';
import type { Post } from '@/types/post';
import type { GetStaticPathsOptions } from 'astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const sortedPosts = await getAllPosts();
  const posts: Post[] = await getPostsWithReadingTimeFromPosts(sortedPosts);

  const uniqueTags = getUniqueTags(posts);

  const pagination = uniqueTags.flatMap((tag) => {
    const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));
    const tagPagination = paginate(filteredPosts, { pageSize: CONFIG.PAGE_SIZE, params: { tag } });
    return tagPagination;
  });

  pagination.push({ ...pagination[0], params: { ...pagination[0].params, page: '1' } });
  return pagination;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const paginationProps = getPaginationPropsFromPage(page);
const metadata: Metadata = { title: `Tag: ${tag}` };

const layoutProps = { metadata, paginationProps };
---

<List {...layoutProps}>
  <PostList posts={page.data} />
</List>
