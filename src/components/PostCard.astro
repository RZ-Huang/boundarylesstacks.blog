---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';

import { getPublishedOrUpdatedDate } from '@/modules/common';
import { getCategoryProps } from '@/modules/post/category';
import Link from '@/components/Link.astro';
import { ROUTES } from '@/constants/routes';
import { formatDate, formatDateIso } from '@/utils/datetime';
import { cn } from '@/utils/styles';

import type { Post } from '@/types/post';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const { data, slug, readingTime } = post;

const {
  draft,
  publishDate,
  updatedDate,
  title,
  heroImage,
  heroAlt,
  noHero,
  category,
  tags = [],
  description,
} = data;

const { icon: categoryIcon } = getCategoryProps(category);
const { lastAccessDate, isUpdatedDate } = getPublishedOrUpdatedDate({
  publishDate,
  updatedDate,
});
---

<article
  class={cn(
    'w-full flex flex-col md:flex-row gap-4 lg:gap-6',
    'not-first:pt-4 not-last:pb-4 md:not-first:pt-6 md:not-last:pb-6',
    'not-last:border-b border-base-300'
  )}
>
  {/* left column */}
  {
    !noHero && (
      <div class="md:basis-1/3 md:shrink-0">
        <Image
          src={heroImage}
          alt={heroAlt}
          widths={[320, 540]}
          sizes="(max-width: 475px) 320px, 540px"
          itemprop="image"
          class="w-full h-[168px] xs:h-[250px] md:h-[168px] md:max-w-[298px] object-cover rounded-box"
          transition:name={`hero-${heroImage.src}`}
        />
      </div>
    )
  }

  {/* right column */}
  <div class={cn('flex flex-col', { 'md:basis-2/3': !noHero })}>
    {/* category and publishDate row*/}
    <div class="flex items-start justify-between mb-4 text-sm leading-none">
      <Link
        href={`${ROUTES.CATEGORIES}${category}`}
        class="inline-flex items-center gap-2 bg-primary-base-200 font-medium px-2 py-0.5 rounded-button"
      >
        <Icon name={categoryIcon} class="w-4 h-4" />
        <span class="pb-0.5">
          {category}
        </span>
      </Link>

      <span class="inline-flex items-center gap-2 text-captions">
        <Icon name={isUpdatedDate ? 'mdi:edit-outline' : 'mdi:access-time'} class="w-4 h-4" />
        <time itemprop="datePublished" datetime={formatDateIso(lastAccessDate)}>
          {formatDate(lastAccessDate)}
        </time>
      </span>
    </div>

    {/* title */}
    <h2 class="text-2xl font-bold break-words md:line-clamp-2 mt-0 mb-2">
      <Link href={`${ROUTES.BLOG}${slug}`} variant="link-heading">
        {title}
        {draft && <sup class="text-sm text-red-400">(draft)</sup>}
      </Link>
    </h2>

    {description && <p class="text-base mb-4 line-clamp-2">{description}</p>}

    {/* reading time and read more link */}
    <div class="flex items-end justify-between">
      <span class="inline-flex items-center gap-2 text-sm text-captions">
        <Icon name="mdi:book-open-blank-variant-outline" class="w-4 h-4" />
        <span>{`${Math.round(readingTime)} minutes`}</span>
      </span>

      <Link href={`${ROUTES.BLOG}${slug}`} class="inline-flex items-center gap-1 font-medium">
        <span>Read more</span>
        <Icon name="mdi:arrow-right" class="w-4 h-4" />
      </Link>
    </div>
  </div>
</article>
