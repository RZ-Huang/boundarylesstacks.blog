---
import { cva } from 'class-variance-authority';

import type { HTMLAttributes } from 'astro/types';
import type { VariantProps } from 'class-variance-authority';

const linkVariants = cva('button-default', {
  variants: {
    variant: {
      outline: 'button-outline',
      solid: 'button-solid',
    },
    colors: {
      primary: 'button-primary',
      neutral: 'button-neutral',
    },
    size: { sm: 'button-sm', md: 'button-md', lg: 'button-lg' },
    disabled: { true: 'button-disabled' },
  },
  compoundVariants: [
    { variant: 'outline', colors: 'primary', class: 'button-outline-primary' },
    { variant: 'outline', colors: 'neutral', class: 'button-outline-neutral' },
    { variant: 'solid', colors: 'primary', class: 'button-solid-primary' },
    { variant: 'solid', colors: 'neutral', class: 'button-solid-neutral' },
  ],
});

export interface Props extends HTMLAttributes<'a'>, VariantProps<typeof linkVariants> {}

const {
  class: className,
  variant = 'outline',
  colors = 'neutral',
  size = 'md',
  disabled,
  ...props
} = Astro.props;

const Element = disabled ? 'span' : 'a';
---

<Element {...props} class={linkVariants({ variant, colors, size, disabled, className })}>
  <slot name="before-icon" />
  <span class="inline-block">
    <slot />
  </span>
  <slot name="after-icon" />
</Element>
